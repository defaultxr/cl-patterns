(in-package #:cl-patterns/tests)

(in-suite cl-patterns-tests)

(test pcycles
  (is-true (every-event-equal (list (event :value :a :dur 1/3)
                                    (event :value :b :dur 1/3)
                                    (event :value :c :dur 1/3))
                              (next-upto-n (pcycles (list :a :b :c) :repeats 1)))
           "pcycles yields incorrect results for basic lists and REPEATS 1")
  (is-true (every-event-equal (list (event :value :a :dur 1/6)
                                    (event :value :b :dur 1/6)
                                    (event :value :c :dur 1/6))
                              (next-upto-n (pcycles (list :a :b :c) :dur 1/2 :repeats 1)))
           "pcycles yields incorrect results for basic lists, DUR 1/2 and REPEATS 1")
  (is-true (every-event-equal (list (event :instrument :foo :dur 1/4)
                                    (event :type :rest :dur 1/4)
                                    (event :instrument :foo :dur 1/4)
                                    (event :type :rest :dur 1/4))
                              (next-upto-n (pcycles "x-x-" :repeats 1 :map (list :x (event :instrument :foo)))))
           "pcycles yields incorrect results for string inputs, REPEATS 1, and specified MAP")
  (is-true (every-event-equal (list (event :value :a :dur 1/3)
                                    (event :value :b :dur 1/6)
                                    (event :value :c :dur 1/6)
                                    (event :value :d :dur 1/3))
                              (next-upto-n (pcycles (list :a (list :b :c) :d) :repeats 1)))
           "pcycles doesn't subdivide the input list correctly")
  (is-true (every-event-equal (list (event :value :a :dur 1/3)
                                    (event :value :b :dur 1/15)
                                    (event :value :c :dur 1/15)
                                    (event :value :d :dur 1/45)
                                    (event :value :e :dur 1/90)
                                    (event :value :f :dur 1/90)
                                    (event :value :g :dur 1/45)
                                    (event :value :h :dur 1/15)
                                    (event :value :i :dur 1/15)
                                    (event :value :j :dur 1/3))
                              (next-upto-n (pcycles (list :a (list :b :c (list :d (list :e :f) :g) :h :i) :j)
                                                    :repeats 1)))
           "pcycles doesn't subdivide multiply nested input lists correctly")
  (is-true (every-event-equal (list (event :foo 1 :dur 1/3)
                                    (event :foo 2 :dur 1/3)
                                    (event :foo 3 :dur 1/6)
                                    (event :foo 4 :dur 1/6))
                              (next-upto-n (pcycles (list 1 2 (list 3 4)) :key :foo :repeats 1)))
           "pcycles KEY argument does not work properly"))
